# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Essential code quality rules
    avoid_print: false
    prefer_const_literals_to_create_immutables: false
    avoid_unnecessary_containers: false
    # always_declare_return_types: false
    # prefer_single_quotes: false
    # prefer_const_constructors: true
    # directives_ordering: true
    # prefer_relative_imports: true
    file_names: false
    prefer_const_constructors_in_immutables: false
    sort_child_properties_last: false
    use_key_in_widget_constructors: false
    library_private_types_in_public_api: false
    prefer_final_fields: false
    prefer_final_locals: false
    use_build_context_synchronously: false
    
    # Additional recommended rules for better code quality
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    control_flow_in_finally: true
    empty_catches: true
    empty_statements: true
    hash_and_equals: true
    implementation_imports: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    no_duplicate_case_values: true
    null_closures: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    # prefer_final_fields: true
    # prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_null_aware_operators: true
    # prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    recursive_getters: true
    slash_for_doc_comments: true
    test_types_in_equals: true
    throw_in_finally: true
    type_init_formals: true
    unnecessary_const: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_null_checks: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    use_rethrow_when_possible: true
    valid_regexps: true
    sized_box_for_whitespace: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
